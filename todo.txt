TODO hook-express
-br

SSL support (and make it easy)

auth for hooks and static-served files

get rid of server::hooks structure?
    - use routing tables directly

bug: hook exceptions return too much to client
    throw new Error('Baloney!');

get-all-hooks should return an array, not an object
    remove conversion-to-object in client

- better function sandbox (like node-red)
    security
    require('fs') problem
    run like node-red functions
        controlled context
    eventually you'll have fs privs and database privs anyway

inject "request" and whitelist requirable modules

command line flag to load a hooks file at startup (from file: / http:)

bug:
click hook_1 and change the text
click hook_2
the change to hook_1 is lost without warning

clear editor on delete? (of last hook)

delete all should empty the path control

method to lock/disable admin api until next restart

bug(?): new hook (no hookId) on existing path/method pair
    new hook
    set path to an existing hook
    save
    should message or replace existing hook
    instead, creates unhittable route
    error message for this case?

---
futures

- test on
    heroku
    dokku
    deis

- editor theme selector
- host indicator
- host status
    - requests
    - live?

- versioned hooks

- download hooks
    - as uploadable http commands

- detailed log view per hook

- live hit counts on the edit screen via socket.io

- set host
    field to set/change host for the client

- disable hook but leave it defined

- libraries of hooks
    - mysql
    - mongo
    - redis
- save/restore hook sets
- share hook sets
