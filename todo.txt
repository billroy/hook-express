TODO hook-express
-br

accordion?

log request IP in metadata
hide/blacklist req.headers.authorization
why isn't console log colorized?
log: argv.loglevel

post /hooks should handle array of hooks

enable easy embedding in other express apps (like cloudcmd)

optional additional user auth table for hooks and static-served files from /public

hook to add/delete/list user to apiUsers

get rid of server::hooks structure?
    - use routing tables directly

bug: hook exceptions return too much to client
    throw new Error('Baloney!');

better function sandbox (like node-red)
    security
    require('fs') problem
    run like node-red functions
        controlled context
    eventually you'll have fs privs and database privs anyway

    inject "request" and whitelist requirable modules?


clear editor on delete? (of last hook)

method to lock/disable admin api until next restart
    /hx/lock {"confirm": true}

bug:
    click hook_1 and change the text
    click hook_2
    the change to hook_1 is lost without warning

bug(?): new hook (no hookId) on existing path/method pair
    new hook
    set path to an existing hook
    save
    should message or replace existing hook
    instead, creates unhittable route
    error message for this case?

passport integration for authentication

socket.io integration
    per-request log update -> client
        live hit counts in the hook window
        live log viewer

detailed log view per hook
    winston provides by-date
    winston is slow
    loki?

move the protected api to /hx/hooks?
    /hookex/hooks
    /hookex/logs
    /hookex/lock
    /hookex/users
    where the editor?  /hookex/editor? /editor?

bcrypt the passwords

docker container recipe

consider integrating for /public file manager:
    https://www.npmjs.com/package/cloudcmd


---
futures

- test on
    heroku
    dokku
    deis

-limited-duration hooks
    self-destruct in x minutes

- clone: var new = Object.assign({}, old);

- editor theme selector

- host indicator
- host status
    - requests
    - live?

- versioned hooks


- live hit counts on the edit screen via socket.io

- set host
    field to set/change host for the client

- disable hook but leave it defined

- libraries of hooks
    - mysql
    - mongo
    - redis
- save/restore hook sets
- share hook sets
